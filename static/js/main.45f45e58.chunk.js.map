{"version":3,"sources":["fbase.js","components/Button.js","components/SocialAuth.js","components/Input.js","components/AuthForm.js","routes/Auth.js","routes/CreateAccount.js","styles/Theme.js","components/ImageModal.js","components/TweetFactory.js","components/TweetStyle.js","components/Tweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","styles/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","colorStyles","css","theme","color","deletePhoto","editTweet","deleteTweet","closeModal","cancelBtn","logoutBtn","selected","fontColor","skyblue","gray","sizeStyles","props","size","StyleButton","styled","button","Button","children","rest","defaultProps","SocialAuth","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","collection","doc","user","uid","set","displayName","MainSection","onClick","icon","faGoogle","faGithub","div","StyleInput","input","Input","AuthForm","useState","email","setEmail","password","setPassword","onChange","value","onSubmit","preventDefault","signInWithEmailAndPassword","errorCode","code","alert","Form","type","placeholder","required","as","form","Auth","LoginSection","to","replace","CreateAccount","nickname","setNickname","newAccount","setNewAccount","createUserWithEmailAndPassword","darkblue","white","black","SectionColumn","Section","ModalWrapper","visible","ModalOverlay","ImageModal","imgUrl","closable","onClose","useEffect","document","body","style","cssText","window","scrollY","top","scrollTo","parseInt","tabIndex","ModalInner","className","faTimes","src","alt","TweetForm","TweetText","textarea","TweetPreview","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentUrl","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","tweetObj","text","userName","createAt","Date","now","creatorId","add","onResize","height","scrollHeight","onKeyDown","onKeyUp","cols","rows","maxLength","htmlFor","aria-label","faImage","id","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","TweetArticle","TweetStyle","Tweet","isOwner","editing","setEditing","newTweet","setNewTweet","showModal","setShowModal","onDeleteClick","confirm","delete","refFromURL","onToggleEditing","prev","update","bgImage","backgroundImage","HomeSection","Home","tweets","setTweets","updateTweet","orderBy","onSnapshot","snapshot","nweetArray","docs","map","MyTweetSection","section","UserProfile","Profile","refreshUser","newDisplayName","setNewDisplayName","clickProfileEdit","setClickProfileEdit","history","useHistory","getMyTweets","where","tweetArray","tweetNameChange","updateProfile","closeProfileEdit","get","signOut","push","MemuList","ul","Navigation","faHome","faUser","AppRouter","isLoggedIn","exact","path","from","GlobalStyles","createGlobalStyle","reset","Logo","span","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","photoUrl","photoURL","args","getUserName","href","faTwitter","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45f45e58.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst colorStyles = css`\r\n  /* 색상 */\r\n  ${({\r\n    theme,\r\n    color,\r\n    deletePhoto,\r\n    editTweet,\r\n    deleteTweet,\r\n    closeModal,\r\n    cancelBtn,\r\n    logoutBtn\r\n  }) => {\r\n    const selected = theme.theme[color];\r\n    const fontColor = color === \"skyblue\" ? \"white\" : theme.theme.skyblue;\r\n    if (deletePhoto || closeModal) {\r\n      return css`\r\n        padding: 10px 13px;\r\n        background-color: ${selected};\r\n        border-radius: 50%;\r\n        opacity: 0.7;\r\n        color: white;\r\n        font-size: 12px;\r\n      `;\r\n    } else if (editTweet || deleteTweet || cancelBtn || logoutBtn) {\r\n      if (cancelBtn) {\r\n        return css`\r\n          padding: 10px 15px;\r\n          font-size: 14px;\r\n          background-color: ${selected};\r\n          color: ${theme.theme.gray};\r\n          border: 1px solid ${theme.theme.gray};\r\n          &:hover {\r\n            background-color: darkgray;\r\n            color: white;\r\n          }\r\n          &:active {\r\n            background-color: darkgray;\r\n            color: white;\r\n          }\r\n        `;\r\n      }\r\n      return css`\r\n        padding: 5px 13px;\r\n        font-size: 12px;\r\n        background-color: ${selected};\r\n        color: ${theme.theme.gray};\r\n        border: 1px solid ${theme.theme.gray};\r\n        &:hover {\r\n          background-color: darkgray;\r\n          color: white;\r\n        }\r\n        &:active {\r\n          background-color: darkgray;\r\n          color: white;\r\n        }\r\n      `;\r\n    }\r\n    return css`\r\n      background-color: ${selected};\r\n      color: ${fontColor};\r\n      border: 1px solid ${fontColor};\r\n      &:active {\r\n        background-color: ${selected};\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst sizeStyles = css`\r\n  ${(props) =>\r\n    props.size === \"full\" &&\r\n    css`\r\n      width: 100%;\r\n    `}\r\n`;\r\n\r\nconst StyleButton = styled.button`\r\n  /* 공통스타일 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 30px;\r\n  outline: none;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n\r\n  ${colorStyles}\r\n  ${sizeStyles}\r\n`;\r\n\r\nconst Button = ({ children, ...rest }) => {\r\n  return <StyleButton {...rest}>{children}</StyleButton>;\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"skyblue\"\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { authService, dbService, firebaseInstance } from \"fbase\";\r\nimport Button from \"./Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SocialAuth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name }\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    await dbService.collection(\"users\").doc(`${data.user.uid}`).set({\r\n      uid: data.user.uid,\r\n      name: data.user.displayName\r\n    });\r\n  };\r\n  return (\r\n    <MainSection>\r\n      <Button onClick={onSocialClick} name=\"google\" color=\"white\">\r\n        <FontAwesomeIcon icon={faGoogle} /> 구글계정으로 시작하기\r\n      </Button>\r\n      <Button onClick={onSocialClick} name=\"github\" color=\"white\">\r\n        <FontAwesomeIcon icon={faGithub} /> 깃허브계정으로 시작하기\r\n      </Button>\r\n    </MainSection>\r\n  );\r\n};\r\n\r\nexport default SocialAuth;\r\n\r\nconst MainSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyleInput = styled.input`\r\n  /* 공통스타일 */\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  border: 1px solid #9fa0a0;\r\n  outline: none;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Input = ({ children, ...rest }) => {\r\n  return <StyleInput {...rest}>{children}</StyleInput>;\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService } from \"fbase\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value }\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      if (errorCode === \"auth/invalid-email\") {\r\n        alert(\"올바른 이메일 형식이 아닙니다\");\r\n      } else if (errorCode === \"auth/user-disabled\") {\r\n        alert(\"비활성화된 사용자입니다\");\r\n      } else if (errorCode === \"auth/user-not-found\") {\r\n        alert(\"아이디 혹은 비밀번호가 일치하지 않습니다\");\r\n      } else if (errorCode === \"auth/wrong-password\") {\r\n        alert(\"아이디 혹은 비밀번호가 일치하지 않습니다\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Input\r\n        onChange={onChange}\r\n        name=\"email\"\r\n        value={email}\r\n        type=\"text\"\r\n        placeholder=\"이메일\"\r\n        required\r\n      />\r\n      <Input\r\n        onChange={onChange}\r\n        name=\"password\"\r\n        value={password}\r\n        type=\"password\"\r\n        placeholder=\"비밀번호\"\r\n        required\r\n      />\r\n      <Button as=\"input\" type=\"submit\" value=\"로그인\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport SocialAuth from \"components/SocialAuth\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport Button from \"components/Button\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <LoginSection>\r\n      <AuthForm />\r\n      <Link to=\"/signup\" replace>\r\n        <Button size=\"full\">가입하기</Button>\r\n      </Link>\r\n      <SocialAuth />\r\n    </LoginSection>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n\r\nconst LoginSection = styled.div`\r\n  width: 400px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport Input from \"components/Input\";\r\nimport Button from \"components/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CreateAccount = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value }\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"nickname\") {\r\n      setNickname(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = await authService.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      setNewAccount(true);\r\n      await dbService.collection(\"users\").doc(`${data.user.uid}`).set({\r\n        uid: data.user.uid,\r\n        name: nickname\r\n      });\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      setNewAccount(false);\r\n      if (errorCode === \"auth/invalid-email\") {\r\n        alert(\"올바른 이메일 형식이 아닙니다\");\r\n      } else if (errorCode === \"auth/email-already-in-use\") {\r\n        alert(\"이미 사용 중인 이메일입니다\");\r\n      } else if (errorCode === \"auth/weak-password\") {\r\n        alert(\"비밀번호를 최소 6자리이상 입력해주세요\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {newAccount ? (\r\n        <div>\r\n          회원가입성공!<p>메인으로 이동합니다</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Form onSubmit={onSubmit}>\r\n            <Input\r\n              onChange={onChange}\r\n              value={email}\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"이메일\"\r\n              required\r\n            />\r\n            <Input\r\n              onChange={onChange}\r\n              value={password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              required\r\n            />\r\n            <Input\r\n              onChange={onChange}\r\n              value={nickname}\r\n              name=\"nickname\"\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              required\r\n            />\r\n            <Button as=\"input\" type=\"submit\" value=\"가입하기\" />\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  input {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default CreateAccount;\r\n","import styled from \"styled-components\";\r\n\r\nexport const theme = {\r\n  skyblue: \"#1da1f3\",\r\n  darkblue: \"#339af0\",\r\n  white: \"#ffffff\",\r\n  gray: \"#aaa\",\r\n  black: \"#000\"\r\n};\r\n\r\nexport const SectionColumn = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nexport const ModalOverlay = styled.div`\r\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ModalOverlay, ModalWrapper } from \"styles/Theme\";\r\n\r\nconst ImageModal = ({ imgUrl, visible, closable, onClose }) => {\r\n  useEffect(() => {\r\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px; width: 100%;`;\r\n    return () => {\r\n      const scrollY = document.body.style.top;\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\r\n      window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\r\n    };\r\n  }, []);\r\n  const close = (event) => {\r\n    if (onClose) {\r\n      onClose(event);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ModalOverlay visible={visible} />\r\n      <ModalWrapper tabIndex=\"-1\" visible={visible}>\r\n        <ModalInner tabIndex=\"0\" className=\"modal-inner\">\r\n          {closable && (\r\n            <Button closeModal color=\"black\" onClick={close}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n          )}\r\n          <img src={imgUrl} alt=\"img\" />\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  button {\r\n    margin: 20px;\r\n  }\r\n  img {\r\n    display: block;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nImageModal.defaultProps = {\r\n  closable: true,\r\n  visible: false\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faImage, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { theme } from \"styles/Theme\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweetObj = {\r\n      text: tweet,\r\n      attachmentUrl,\r\n      userName: userObj.displayName,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const onResize = (event) => {\r\n    const textarea = event.target;\r\n    textarea.style.height = textarea.scrollHeight + \"px\";\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files }\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result }\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachmentClick = () => setAttachment(\"\");\r\n  return (\r\n    <TweetForm onSubmit={onSubmit}>\r\n      <TweetText\r\n        value={tweet}\r\n        onChange={onChange}\r\n        onKeyDown={onResize}\r\n        onKeyUp={onResize}\r\n        placeholder=\"무슨 일이 일어나고 있나요?\"\r\n        cols=\"50\"\r\n        rows=\"2\"\r\n        maxLength={120}\r\n      />\r\n      <div className=\"btn-group\">\r\n        <label htmlFor=\"attach-file\" aria-label=\"사진 업로드\">\r\n          <FontAwesomeIcon icon={faImage} color={theme.skyblue} size=\"lg\" />\r\n          <input\r\n            id=\"attach-file\"\r\n            onChange={onFileChange}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </label>\r\n        <Button as=\"input\" type=\"submit\" value=\"트윗\" />\r\n      </div>\r\n      {attachment && (\r\n        <TweetPreview>\r\n          <img src={attachment} alt=\"img\" />\r\n          <Button color=\"black\" onClick={onClearAttachmentClick} deletePhoto>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Button>\r\n        </TweetPreview>\r\n      )}\r\n    </TweetForm>\r\n  );\r\n};\r\n\r\nconst TweetForm = styled.form`\r\n  margin-bottom: 10px;\r\n  padding: 15px 10px 5px;\r\n  border-bottom: 1px solid #ddd;\r\n  background-color: white;\r\n  .btn-group {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    margin-left: 5px;\r\n    label {\r\n      cursor: pointer;\r\n      input[type=\"file\"] {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TweetText = styled.textarea`\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 17px;\r\n  resize: none;\r\n  overflow: hidden;\r\n  ::placeholder {\r\n    letter-spacing: -1.5px;\r\n  }\r\n`;\r\n\r\nconst TweetPreview = styled.div`\r\n  position: relative;\r\n  margin: 20px 0 10px;\r\n  button {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    margin: 5px;\r\n  }\r\n  img {\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nexport default TweetFactory;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TweetArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 15px;\r\n  border-top: 1px solid #ddd;\r\n  background-color: white;\r\n  font-size: 16px;\r\n  letter-spacing: -0.5px;\r\n  h6 {\r\n    margin: 5px 0;\r\n    font-weight: bold;\r\n  }\r\n  textarea {\r\n    margin-bottom: 15px;\r\n  }\r\n  .tweet-info {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    .btn-group {\r\n      justify-self: end;\r\n      button {\r\n        &:first-child {\r\n          margin-right: 3px;\r\n        }\r\n      }\r\n    }\r\n    p {\r\n      margin: 10px 0 13px;\r\n      grid-column: span 2;\r\n    }\r\n  }\r\n  .img-preview {\r\n    position: relative;\r\n    cursor: pointer;\r\n    height: 280px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nconst TweetStyle = ({ children, ...rest }) => {\r\n  return <TweetArticle {...rest}>{children}</TweetArticle>;\r\n};\r\n\r\nexport default TweetStyle;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { Section } from \"styles/Theme\";\r\nimport Button from \"./Button\";\r\nimport ImageModal from \"./ImageModal\";\r\nimport { TweetText } from \"./TweetFactory\";\r\nimport TweetStyle from \"./TweetStyle\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      if (tweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const onToggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n  const onResize = (event) => {\r\n    const textarea = event.target;\r\n    textarea.style.height = textarea.scrollHeight + \"px\";\r\n  };\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const bgImage = {\r\n    backgroundImage: `url(${tweetObj.attachmentUrl})`\r\n  };\r\n  return (\r\n    <article>\r\n      {editing ? (\r\n        <TweetStyle>\r\n          <h6>{tweetObj.userName}</h6>\r\n          <form onSubmit={onSubmit}>\r\n            <TweetText\r\n              value={newTweet}\r\n              onChange={onChange}\r\n              onKeyDown={onResize}\r\n              onKeyUp={onResize}\r\n              placeholder=\"수정 사항 입력\"\r\n              cols=\"50\"\r\n              rows=\"2\"\r\n              maxLength={120}\r\n            />\r\n            <Button as=\"input\" type=\"submit\" value=\"확인\" size=\"full\" />\r\n          </form>\r\n          <Button onClick={onToggleEditing} color=\"white\" cancelBtn>\r\n            취소\r\n          </Button>\r\n        </TweetStyle>\r\n      ) : (\r\n        <TweetStyle>\r\n          <div className=\"tweet-info\">\r\n            <h6>{tweetObj.userName}</h6>\r\n            {isOwner && (\r\n              <Section className=\"btn-group\">\r\n                <Button onClick={onToggleEditing} color=\"white\" editTweet>\r\n                  수정\r\n                </Button>\r\n                <Button onClick={onDeleteClick} color=\"white\" deleteTweet>\r\n                  삭제\r\n                </Button>\r\n              </Section>\r\n            )}\r\n            <p>{tweetObj.text}</p>\r\n          </div>\r\n          {tweetObj.attachmentUrl && (\r\n            <>\r\n              <div\r\n                className=\"img-preview\"\r\n                style={bgImage}\r\n                onClick={openModal}\r\n              ></div>\r\n              {showModal && (\r\n                <ImageModal\r\n                  imgUrl={tweetObj.attachmentUrl}\r\n                  visible={showModal}\r\n                  closable={true}\r\n                  onClose={closeModal}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </TweetStyle>\r\n      )}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    const updateTweet = dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setTweets(nweetArray);\r\n      });\r\n    return () => {\r\n      updateTweet();\r\n    };\r\n  }, []);\r\n  return (\r\n    <HomeSection>\r\n      <TweetFactory userObj={userObj} />\r\n      <section>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </section>\r\n    </HomeSection>\r\n  );\r\n};\r\n\r\nconst HomeSection = styled.div`\r\n  width: 100%;\r\n  background-color: #eeeeee;\r\n`;\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport Tweet from \"components/Tweet\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"components/Button\";\r\nimport Input from \"components/Input\";\r\nimport { ModalOverlay, ModalWrapper } from \"styles/Theme\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [clickProfileEdit, setClickProfileEdit] = useState(false);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    const ok = window.confirm(\"로그아웃하시겠습니까?\");\r\n    if (ok) {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getMyTweets = dbService\r\n      .collection(\"tweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const tweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setTweets(tweetArray);\r\n      });\r\n    return () => {\r\n      getMyTweets();\r\n    };\r\n  }, [userObj]);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      tweetNameChange();\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName\r\n      });\r\n\r\n      closeProfileEdit();\r\n      refreshUser();\r\n    }\r\n    closeProfileEdit();\r\n  };\r\n  const tweetNameChange = async () => {\r\n    const data = await dbService\r\n      .collection(\"tweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .get();\r\n    data.docs.map((doc) =>\r\n      dbService.doc(`tweets/${doc.id}`).update({\r\n        userName: newDisplayName\r\n      })\r\n    );\r\n  };\r\n  const openProfileEdit = () => {\r\n    setClickProfileEdit(true);\r\n  };\r\n  const closeProfileEdit = () => {\r\n    setClickProfileEdit(false);\r\n  };\r\n  return (\r\n    <>\r\n      <UserProfile>\r\n        <div className=\"user-profile\">\r\n          <div className=\"user-profile__image\"></div>\r\n          <h4>{userObj.displayName}</h4>\r\n        </div>\r\n        {clickProfileEdit && (\r\n          <>\r\n            <ModalOverlay visible={true} />\r\n            <ModalWrapper tabIndex=\"-1\" visible={true}>\r\n              <div className=\"profile-form\">\r\n                <div>\r\n                  <FontAwesomeIcon\r\n                    icon={faTimes}\r\n                    size=\"lg\"\r\n                    className=\"closeProfileBtn\"\r\n                    onClick={closeProfileEdit}\r\n                  />\r\n                  <form onSubmit={onSubmit}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={onChange}\r\n                      value={newDisplayName}\r\n                      placeholder=\"닉네임\"\r\n                    />\r\n                    <Button as=\"input\" type=\"submit\" value=\"저장\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </ModalWrapper>\r\n          </>\r\n        )}\r\n        <div className=\"user-util\">\r\n          <Button color=\"white\" onClick={openProfileEdit}>\r\n            프로필 수정\r\n          </Button>\r\n          <Button color=\"white\" onClick={onLogOutClick} logoutBtn>\r\n            로그아웃\r\n          </Button>\r\n        </div>\r\n      </UserProfile>\r\n      <MyTweetSection>\r\n        {tweets &&\r\n          tweets.map((tweet) => (\r\n            <Tweet\r\n              key={tweet.id}\r\n              tweetObj={tweet}\r\n              isOwner={tweet.creatorId === userObj.uid}\r\n            />\r\n          ))}\r\n      </MyTweetSection>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyTweetSection = styled.section`\r\n  width: 100%;\r\n`;\r\n\r\nconst UserProfile = styled.section`\r\n  width: 100%;\r\n  padding: 10px 15px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .user-profile {\r\n    display: flex;\r\n    flex-direction: column;\r\n    &__image {\r\n      width: 150px;\r\n      height: 150px;\r\n      border-radius: 50%;\r\n      border: 2px solid #eee;\r\n      background-image: url(\"https://cdn.kado.net/news/photo/202004/1018454_448598_1539.jpg\");\r\n      background-size: cover;\r\n      background-position: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    h4 {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  .profile-form {\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > div {\r\n      background-color: #fff;\r\n      border-radius: 15px;\r\n    }\r\n    .closeProfileBtn {\r\n      cursor: pointer;\r\n      margin: 10px 15px;\r\n    }\r\n    form {\r\n      width: 450px;\r\n      display: flex;\r\n      justify-content: center;\r\n      padding: 30px;\r\n    }\r\n  }\r\n  .user-util {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"styles/Theme\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <MemuList>\r\n      <li>\r\n        <Link to=\"/\" replace>\r\n          <FontAwesomeIcon\r\n            icon={faHome}\r\n            color={theme.skyblue}\r\n            size=\"lg\"\r\n            aria-label=\"홈\"\r\n          />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\" replace>\r\n          <FontAwesomeIcon\r\n            icon={faUser}\r\n            color={theme.skyblue}\r\n            size=\"lg\"\r\n            aria-label=\"프로필\"\r\n          />\r\n        </Link>\r\n      </li>\r\n    </MemuList>\r\n  );\r\n};\r\n\r\nconst MemuList = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0px 10px 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  li {\r\n    &:first-child {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport CreateAccount from \"routes/CreateAccount\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ userObj, isLoggedIn, refreshUser }) => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        {isLoggedIn && <Navigation />}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          )}\r\n        </Switch>\r\n        <Route exact path=\"/signup\">\r\n          <CreateAccount />\r\n        </Route>\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n@font-face {\r\n    font-family: 'NanumSquareRound';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumSquareRound.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n  ${reset}\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'NanumSquareRound';\r\n  }\r\n  body{\r\n    background-color: #ffffff;\r\n    font-family: 'NanumSquareRound';\r\n  }\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  input, button {\r\n    // background-color: transparent;\r\n    // border: none;\r\n    // outline: none;\r\n  }\r\n  h1, h2, h3, h4, h5, h6{\r\n      \r\n  }\r\n  ol, ul, li {\r\n    list-style: none;\r\n  }\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport AppRouter from \"components/Router\";\nimport GlobalStyles from \"styles/GlobalStyles\";\nimport { theme, SectionColumn } from \"styles/Theme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoUrl: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n        getUserName(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoUrl: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n  const getUserName = (user) => {\n    dbService\n      .collection(\"users\")\n      .doc(`${user.uid}`)\n      .onSnapshot((snapshot) => {\n        const data = snapshot.data();\n        if (user.displayName === null) {\n          user.updateProfile({\n            displayName: data.name\n          });\n        }\n      });\n  };\n  return (\n    <>\n      <ThemeProvider theme={{ theme }}>\n        <GlobalStyles />\n        {init ? (\n          <SectionColumn>\n            <Logo as=\"a\" href=\"/pwitter\">\n              <FontAwesomeIcon\n                icon={faTwitter}\n                size=\"2x\"\n                color={theme.skyblue}\n              />\n            </Logo>\n            <AppRouter\n              userObj={userObj}\n              isLoggedIn={isLoggedIn}\n              refreshUser={refreshUser}\n            />\n          </SectionColumn>\n        ) : (\n          \"\"\n        )}\n      </ThemeProvider>\n    </>\n  );\n}\n\nconst Logo = styled.span`\n  display: flex;\n  justify-content: center;\n  margin: 30px 0;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}